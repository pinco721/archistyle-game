const fs = require('fs');
const path = require('path');

// 1. –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
const BASE_PHOTO_DIR = path.join(__dirname, 'public', 'archistyle_photos');
const OUTPUT_JSON_FILE = path.join(__dirname, 'src', 'data', 'styles.json'); // –ü—É—Ç—å –∫ –≤–∞—à–µ–º—É –∏—Å—Ö–æ–¥–Ω–æ–º—É styles.json

// 2. –°—Ç–∏–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å (–∏–º–µ–Ω–∞ –ø–æ–¥–ø–∞–ø–æ–∫)
const STYLES_TO_UPDATE = {
    'baroque': '–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –±–∞—Ä–æ–∫–∫–æ',
    'gothic': '–ì–æ—Ç–∏—á–µ—Å–∫–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞',
    'neoclassicism': '–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –≥—Ä–µ—á–µ—Å–∫–æ–≥–æ –≤–æ–∑—Ä–æ–∂–¥–µ–Ω–∏—è',
    'palladian': '–ü–∞–ª–ª–∞–¥–∏–∞–Ω—Å–∫–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞',
    'romanesque': '–†–æ–º–∞–Ω—Å–∫–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞'
};

function generatePhotoUrls() {
    console.log("üõ†Ô∏è –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ photoUrls...");
    
    // 3. –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π JSON-—Ñ–∞–π–ª —Å –ø–æ–¥—Å–∫–∞–∑–∫–∞–º–∏
    let existingData;
    try {
        existingData = JSON.parse(fs.readFileSync(OUTPUT_JSON_FILE, 'utf8'));
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ styles.json:", error.message);
        return;
    }

    // 4. –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É —Å—Ç–∏–ª—é, –∫–æ—Ç–æ—Ä—ã–π –º—ã —Ö–æ—Ç–∏–º –æ–±–Ω–æ–≤–∏—Ç—å
    for (const folderName in STYLES_TO_UPDATE) {
        const styleName = STYLES_TO_UPDATE[folderName];
        const styleDir = path.join(BASE_PHOTO_DIR, folderName);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–∞–ø–∫–∞
        if (!fs.existsSync(styleDir)) {
            console.warn(`‚ö†Ô∏è –ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: ${styleDir}. –ü—Ä–æ–ø—É—Å–∫ —Å—Ç–∏–ª—è ${styleName}.`);
            continue;
        }

        // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª—ã –≤ –ø–æ–¥–ø–∞–ø–∫–µ
        const files = fs.readdirSync(styleDir)
            .filter(file => file.endsWith('.jpg') || file.endsWith('.jpeg') || file.endsWith('.png'))
            .sort(); // –°–æ—Ä—Ç–∏—Ä—É–µ–º, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å 01, 02...

        // 5. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º URL-–∞–¥—Ä–µ—Å–∞
        const newPhotoUrls = files.map(file => `/archistyle_photos/${folderName}/${file}`);
        
        // 6. –ù–∞—Ö–æ–¥–∏–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Å—Ç–∏–ª—å –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º JSON
        const targetStyle = existingData.find(s => s.name === styleName);
        
        if (targetStyle) {
            targetStyle.photoUrls = newPhotoUrls;
            console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ ${newPhotoUrls.length} —Å—Å—ã–ª–æ–∫ –¥–ª—è: ${styleName}`);
        } else {
            console.warn(`‚ö†Ô∏è –°—Ç–∏–ª—å "${styleName}" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ styles.json. –ü—Ä–æ–ø—É—Å–∫.`);
        }
    }

    // 7. –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –æ–±—Ä–∞—Ç–Ω–æ –≤ styles.json
    try {
        fs.writeFileSync(OUTPUT_JSON_FILE, JSON.stringify(existingData, null, 2), 'utf8');
        console.log("üéâ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. styles.json –æ–±–Ω–æ–≤–ª–µ–Ω!");
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ styles.json:", error.message);
    }
}

generatePhotoUrls();